apply plugin: 'checkstyle'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'findbugs'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven-publish'

group = "com.wepay.zktools"

def major_version = 0
def minor_version = 3
def micro_version = (hasProperty("teamcity") && teamcity["build.number"] != null) ? teamcity["build.number"] : "X";

version = "$major_version.$minor_version.$micro_version";

project.ext {
    apacheZooKeeperVersion = '3.4.10'
    googleFindbugsVersion = '3.0.1'
    hamcrestVersion = '1.3'
    junitVersion = '4.11'
    slf4jVersion = '1.7.21'
}

configurations.all {
    resolutionStrategy {
        force "org.hamcrest:hamcrest-all:$hamcrestVersion"
    }    
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1'
    }
}

repositories {
    mavenCentral()
    maven { url 'http://packages.confluent.io/maven/' }
}

dependencies {
    compile (
            "com.google.code.findbugs:annotations:$googleFindbugsVersion",
            "org.apache.zookeeper:zookeeper:$apacheZooKeeperVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
    )

    testCompile (
            "com.google.code.findbugs:annotations:$googleFindbugsVersion",
            "junit:junit:$junitVersion",
    )
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

compileTestJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

checkstyle {
    toolVersion = "7.1.2"
}

findbugs {
    toolVersion = "3.0.1"
}

checkstyleMain {
    reports {
        xml {
            destination "$rootDir/build/reports/checkstyle/main.xml"
        }
    }
    configFile = new File(rootDir, 'config/checkstyle/checkstyle.xml')

    doLast {
        ant.xslt(in: "$rootDir/build/reports/checkstyle/main.xml",
                style: "config/checkstyle/checkstyle-noframes.xsl",
                out: "$rootDir/build/reports/checkstyle/main.html"
        )
    }
}

checkstyleTest {
    reports {
        xml {
            destination "build/reports/checkstyle/test.xml"
        }
    }
    configFile = new File("config/checkstyle/checkstyle_test.xml")

    doLast {
        ant.xslt(in: "$buildDir/reports/checkstyle/test.xml",
            style: "config/checkstyle/checkstyle-noframes.xsl",
            out: "$buildDir/reports/checkstyle/test.html"
        )
    }
}

// findbugs html only report
findbugsMain {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

findbugsTest {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

test {
    forkEvery = 1 // SASL tests must run in separate JVMs due to JAAS config loading.
}

jar {
    manifest {
        attributes 'Implementation-Title': 'WePay ZKTools library',
                   'Implementation-Version': version
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId 'zktools'
            from components.java
        }
    }
}

artifactoryPublish {
    publications(publishing.publications.mavenJava)
}


